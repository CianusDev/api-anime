const
    UserAgent = require('user-agents'),
    HttpsProxyAgent = require('https-proxy-agent');

const userag = (ip) => {
    // if (!ip) ip = randomProxy();
    var userag = new UserAgent();
    if (ip) userag = new HttpsProxyAgent('http:/' + ip);
    return userag
};
exports.userag = userag;

const functFormat = (s) => {
    if (!s) return;
    s = s.trim();
    s = s.replace(/^"|"$/g, "");
    if (s == "") s = false;
    return s
};
exports.functFormat = functFormat;

const getIsCommented = (script, call) => {
    const
        startIndex = script.indexOf(call),
        endIndex = startIndex + call.length;
    let isC = false;
    for (let k = startIndex; k >= 0; k--) {
        if (script.substring(k - 2, k) === '*/') {
            isC = false;
            break;
        }
        if (script.substring(k - 2, k) === '/*') {
            isC = true;
            break;
        }
    };
    return isC
};
exports.getIsCommented = getIsCommented;

const getData = (url, ip) => {
    return new Promise(async (resolve, reject) => {
        fetch(url, {
            headers: {
                'user-agent': userag(ip),
                'accept': 'application/json, text/plain, */*'
            }
        }).then(res => {
            res.text().then(data => {
                resolve(data)
            })
        }).catch(err => {
            reject(err);
        })
    })
};
exports.getData = getData